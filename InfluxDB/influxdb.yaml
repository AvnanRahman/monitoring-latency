apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  generation: 1
  labels:
    app: influxdb
  name: influxdb
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: influxdb
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: influxdb
    spec:
      containers:
      - env:
           - name: INFLUXDB_ADMIN_USER_PASSWORD    
             value: your-password #you can give anything here. 
        image: influxdb:2.3.0-alpine
        imagePullPolicy: Always
        name: influxdb
        resources:
          requests:
            cpu: "500m"
            memory: "128Mi"
          limits:
            cpu: "1"
            memory: "1Gi"
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        securityContext:
          runAsUser: 1000  # Non-root user
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /var/lib/influxdb2
          name: var-lib-influxdb
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
      - name: var-lib-influxdb
        persistentVolumeClaim:
          claimName: influxdb-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: influxdb
  name: influxdb-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---

apiVersion: v1
kind: Service
metadata:
  name: influxdb
  namespace: default
  labels:
    app: influxdb
spec:
  selector:
    app: influxdb
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 8086
      targetPort: 8086
